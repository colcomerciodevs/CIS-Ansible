---
# Tarea 5.5.1 - Asegurar que la expiración de contraseñas esté en 42 días o menos (Automático)
- name: "5.5.1 | PATCH | Ensure password expiration is 365 days or less"
  block:
    - name: "Set secure permissions for /etc/login.defs"
      ansible.builtin.file:
        path: /etc/login.defs
        owner: root
        group: root
        mode: "0644"
        
    - name: "5.5.1 | PATCH | Ensure default PASS_MAX_DAYS for new users"
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: '^PASS_MAX_DAYS'
        line: "PASS_MAX_DAYS {{ rhel8_cis_pass['max_days'] }}"
        create: true
        backup: true
        mode: "0644"
      tags:
        - patch
        - password
         
    - name: "5.5.1 | AUDIT | Check users with invalid PASS_MAX_DAYS in /etc/shadow"
      ansible.builtin.command:
        cmd: >
          awk -F: '
          /^[^:]+:[^!*]/ && ($5 != {{ rhel8_cis_pass['max_days'] }} && $5 > 0)
          { print $1 }' /etc/shadow
      register: discovered_max_days
      changed_when: false
      failed_when: false
      tags:
        - audit

    # Tarea Crítica: Auditoría de Configuración Sensible
    - name: "5.5.1 | PATCH | Correct PASS_MAX_DAYS for existing users"
      ansible.builtin.user:
        name: "{{ item }}"
        password_expire_max: "{{ rhel8_cis_pass['max_days'] }}"
      loop: "{{ discovered_max_days.stdout_lines }}"
      when:
        - discovered_max_days.stdout_lines | length > 0
        - item in discovered_interactive_usernames.stdout_lines
        - rhel8_cis_force_user_maxdays 
      tags:
        - patch

  when:
    - rhel8_cis_rule_5_5_1
  tags:
    - level1
    - password
    - rule_5.5.1

# Tarea 5.5.2 - Asegurarse de que el mínimo de días entre cambios de contraseñas esté establecido en 3 (Automático)
- name: "5.5.2 | PATCH | Ensure minimum days between password changes is 7 or more"
  block:
    - name: "5.5.2 | PATCH | Ensure minimum days between password changes is configured | set login.defs"
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: '^PASS_MIN_DAYS'
        line: "PASS_MIN_DAYS {{ rhel8_cis_pass['min_days'] }}"

    - name: "5.5.2 | AUDIT | Ensure minimum days between password changes is configured | Get existing users PASS_MIN_DAYS"
      ansible.builtin.shell: "awk -F: '/^[^:]+:[^!*]/ && $4< {{ rhel8_cis_pass['min_days'] }} {print $1}' /etc/shadow"
      changed_when: false
      failed_when: false
      register: discovered_min_days

    # Tarea Crítica: Auditoría de Configuración Sensible
    - name: "5.5.2 | PATCH | Set PASS_MIN_DAYS for existing users"
      ansible.builtin.command:
        cmd: "chage --mindays {{ rhel8_cis_pass['min_days'] }} {{ item }}"
      loop: "{{ discovered_min_days.stdout_lines }}"
      when:
        - discovered_min_days.stdout_lines | length > 0  
        - item in discovered_interactive_usernames.stdout_lines  
        - rhel8_cis_force_user_mindays  
      changed_when: false
      tags:
        - patch
        - password
  when:
    - rhel8_cis_rule_5_5_2
  tags:
    - level1
    - patch
    - password
    - rule_5.5.2

# Tarea 5.5.3 - Asegurar que la advertencia de expiración de contraseñas esté en 5 días o más (Automático)
- name: "5.5.3 | PATCH | Ensure password expiration warning days is 7 or more"
  block:
    - name: "5.5.3 | PATCH | Ensure password expiration warning days is 7 or more | set login.defs"
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: '^PASS_WARN_AGE'
        line: "PASS_WARN_AGE {{ rhel8_cis_pass['warn_age'] }}"

    - name: "5.5.3 | AUDIT | Ensure password expiration warning days is 7 or more | Get existing users WARN_DAYS"
      ansible.builtin.shell: "awk -F: '/^[^:]+:[^!*]/ && $6< {{ rhel8_cis_pass['warn_age'] }} {print $1}' /etc/shadow"
      changed_when: false
      failed_when: false
      register: discovered_warn_days

    # Tarea Crítica: Auditoría de Configuración Sensible
    - name: "5.5.3 | PATCH | Ensure password expiration warning days is 7 or more | Set existing users WARN_DAYS"
      ansible.builtin.user:
        name: "{{ item }}"
        password_warn_days: "{{ rhel8_cis_pass['warn_age'] }}"
      loop: "{{ discovered_warn_days.stdout_lines }}"
      when:
        - discovered_warn_days.stdout_lines | length > 0
        - item in discovered_interactive_usernames.stdout
        - rhel8_cis_force_user_warnage
  when:
    - rhel8_cis_rule_5_5_3
  tags:
    - level1
    - patch
    - password
    - rule_5.5.3

# Tarea 5.5.4 - Asegurar que el bloqueo de contraseñas por inactividad esté en 30 días o menos (Automático)
- name: "5.5.4 | PATCH | Ensure inactive password lock is 30 days or less"
  block:
    - name: "5.5.4 | AUDIT | Ensure inactive password lock is 30 days or less | Check current settings"
      ansible.builtin.command:
        cmd: "useradd -D"
      register: rhel8_cis_5_5_4_inactive_settings
      changed_when: false
      failed_when: false
      check_mode: false

    - name: "5.5.4 | PATCH | Asegurar que el bloqueo por inactividad de la contraseña sea de 30 días o menos | Establecer configuración predeterminada"
      ansible.builtin.command:
        cmd: "useradd -D -f {{ rhel8_cis_inactivelock.lock_days }}"
      changed_when: false
      when: >
        'INACTIVE=' + rhel8_cis_inactivelock.lock_days | string
        not in rhel8_cis_5_5_4_inactive_settings.stdout

    - name: "5.5.4 | AUDIT | Ensure inactive password lock is 30 days or less | Getting user list"
      ansible.builtin.command:
        cmd: >
          awk -F: '/^[^#:]+:[^\\!\\*:]*:[^:]*:[^:]*:[^:]*:[^:]*:(\\s*|-1|3[1-9]|[4-9][0-9]|[1-9][0-9][0-9]+):[^:]*:[^:]*\\s*$/ {print $1}' /etc/shadow
      register: rhel8_cis_5_5_4_user_list
      changed_when: false
      check_mode: false

    - name: "5.5.4 | PATCH | Ensure inactive password lock is 30 days or less | Apply Inactive setting to existing accounts"
      ansible.builtin.command:
        cmd: "chage --inactive {{ rhel8_cis_inactivelock.lock_days }} {{ item }}"
      loop: "{{ rhel8_cis_5_5_4_user_list.stdout_lines }}"
      changed_when: false
      when:
        - item in discovered_interactive_usernames.stdout

  when:
    - rhel8_cis_rule_5_5_4
  tags:
    - level1
    - patch
    - password
    - rule_5.5.4


# Tarea 5.5.5 - Asegurar que todos los usuarios deben tener una fecha de cambio de contraseña en el pasado (Automático)
- name: "5.5.5 | PATCH | Ensure all users last password change date is in the past"
  block:
    - name: "5.5.5 | AUDIT | Get current date in days since Unix epoch"
      ansible.builtin.shell: "echo $(( $(date --utc +%s) / 86400 ))"
      changed_when: false
      failed_when: false
      check_mode: false
      register: rhel8_cis_5_5_5_currentut

    - name: "5.5.5 | AUDIT | Get list of users with last pw change date in the future"
      ansible.builtin.shell: |
        awk -F: -v current="{{ rhel8_cis_5_5_5_currentut.stdout }}" \
            -v excluded="{{ excluded_users | join(',') }}" \
            -v min_uid="{{ min_int_uid }}" '
            BEGIN { split(excluded, exclude_list, ","); }
            {
              if ($3 > current && $3 !~ /^$/ && $3 !~ /[a-z]/) {
                for (i in exclude_list) {
                  if ($1 == exclude_list[i]) next;
                }
                if ($3 >= min_uid) print $1;
              }
            }
        ' /etc/shadow
      changed_when: false
      failed_when: false
      check_mode: false
      register: rhel8_cis_5_5_5_user_list

    - name: "5.5.5 | AUDIT | Alert on accounts with pw change in the future"
      ansible.builtin.debug:
        msg: "Warning!! The following accounts have the last PW change date in the future: {{ rhel8_cis_5_5_5_user_list.stdout_lines }}"
      when:
        - rhel8_cis_5_5_5_user_list.stdout | length > 0
        - not rhel8_cis_futurepwchgdate_autofix

    - name: "5.5.5 | AUDIT | Log warnings for accounts with future pw dates"
      ansible.builtin.import_tasks: warning_facts.yml
      when:
        - rhel8_cis_5_5_5_user_list.stdout | length > 0
        - not rhel8_cis_futurepwchgdate_autofix

    - name: "5.5.5 | PATCH | Expire passwords for users with future pw change dates"
      ansible.builtin.command:
        cmd: passwd --expire {{ item }}
      changed_when: true
      loop: "{{ rhel8_cis_5_5_5_user_list.stdout_lines }}"
      when:
        - rhel8_cis_5_5_5_user_list.stdout | length > 0
        - rhel8_cis_futurepwchgdate_autofix
  vars:
    warn_control_id: '5.5.5'
  when:
    - rhel8_cis_rule_5_5_5
  tags:
    - level1
    - account
    - patch
    - rule_5.5.5


# Tarea 5.5.6 - Asegurar que las cuentas de sistema estén aseguradas (Automático)
- name: "5.5.6 | PATCH | Ensure system accounts are secured"
  block:
    - name: "5.5.6 | PATCH | Set nologin for system accounts"
      ansible.builtin.user:
        name: "{{ item.id }}"
        shell: /usr/sbin/nologin
      loop: "{{ rhel8_cis_passwd }}"
      when:
        - item.id not in excluded_users
        - item.uid < min_int_uid | int
        - item.shell not in allowed_shells
      loop_control:
        label: "{{ item.id }}"

    - name: "5.5.6 | PATCH | Lock system accounts"
      ansible.builtin.user:
        name: "{{ item.id }}"
        password_lock: true
      loop: "{{ rhel8_cis_passwd }}"
      when:
        - item.id not in excluded_users
        - item.uid < min_int_uid | int
        - item.shell not in allowed_shells
      loop_control:
        label: "{{ item.id }}"
  when:
    - rhel8_cis_rule_5_5_6
  tags:
    - level1
    - patch
    - accounts
    - rule_5.5.6

# Tarea 5.5.7 - Asegurar que el grupo por defecto para la cuenta ROOT esté en GID 0 (Automático)
- name: SCORED | 5.5.7 |  Ensure the default group for the ROOT account is at GID 0 (Automatic)
  ansible.builtin.user:
    name: root
    group: 0
  become: true
  when: 
    - root_gid_check.stdout != '0'
    - rhel8_cis_rule_5_5_7
  tags:
    - level1
    - patch
    - root_gid
    - rule_5.5.7

# Tarea 5.5.8 - Asegurar que el umask para el usuario por defecto sea 027 o mas restrictivo (Automático)
## DEPENDE DEL MODULO PAM_UMASK EN AUTHSELECT PARA SU EJECUCION
- name: "5.5.8 | PATCH | Ensure default user umask is 027 or more restrictive"
  block:
    - name: "5.5.8 | PATCH | Ensure umask is set correctly in /etc/bashrc, /etc/profile"
      ansible.builtin.lineinfile:
        path: "{{ item }}"
        regexp: '^umask'
        line: 'umask 027'
        state: present
      loop:
        - /etc/bashrc
        - /etc/profile

    - name: "5.5.8 | PATCH | Ensure UMASK is set correctly in /etc/login.defs"
      ansible.builtin.lineinfile:
        path: "/etc/login.defs"
        regexp: '^UMASK'
        line: 'UMASK 027'
        state: present

    - name: "5.5.8 | PATCH | Ensure USERGROUPS_ENAB is set to no in /etc/login.defs"
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: '^USERGROUPS_ENAB'
        line: 'USERGROUPS_ENAB no'
        state: present

    - name: "5.5.8 | VALIDATE | Ensure custom authselect profile is active"
      ansible.builtin.command: authselect current
      register: authselect_status
      changed_when: false

    - name: "5.5.8 | PATCH | Agregar pam_umask.so al perfil personalizado de authselect"
      ansible.builtin.lineinfile:
        path: "/etc/authselect/custom/{{ rhel8_cis_authselect['custom_profile_name'] }}/{{ item }}"
        regexp: '^session\s+required\s+pam_umask.so'
        line: 'session required pam_umask.so'
        insertafter: '^session\s+required\s+pam_limits.so'
      notify: Check authselect changes
      when:
        - rhel8_cis_rule_5_5_8_authselect
        - rhel8_cis_authselect['custom_profile_name'] in authselect_status.stdout
      loop:
        - system-auth
        - password-auth  
  when:
    - rhel8_cis_rule_5_5_8
  tags:
    - level1
    - patch
    - accounts
    - rule_5.5.8

# Forzar ejecución de handlers aquí para asegurarnos de que PAM se reinicie antes de continuar
- name: "5.5.8 | DEBUG | Ensure handlers are recognized"
  ansible.builtin.meta: flush_handlers


# Tarea 5.5.9 - Asegurar default user shell timeout is 900 seconds or less (Automático)
- name: SCORED| 5.5.9 | PATCH | Ensure default user shell timeout is 900 seconds or less
  ansible.builtin.lineinfile:
    state: present
    dest: "{{ item }}"
    create: true
    regexp: '^TMOUT='
    line: "TMOUT={{ rhel8_cis_shell_timeout }} ; export TMOUT"
    mode: "0644"
  when:
    - rhel8_cis_rule_5_5_9
  loop:
    - /etc/bashrc
    - /etc/profile
  tags:
    - level1
    - level2
    - patch
    - rule_5.5.9

#

